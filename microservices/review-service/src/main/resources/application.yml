spring:
  datasource:
    url: jdbc:mysql://localhost/review-db
    username: user
    password: pwd
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari.initializationFailTimeout: 60000

  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: true

  cloud:
    function:
      definition: messageProcessor
    stream:
      default-binder: rabbit
      default.contentType: application/json
      bindings:
        messageProcessor-in-0:
          destination: reviews
          group: reviewsGroup
          consumer:
              maxAttempts: 3
              backOffInitialInterval: 500
              backOffMaxInterval: 1000
              backOffMultiplier: 2.0

      rabbit:
        bindings.messageProcessor-in-0:
            consumer:
              autoBindDlq: true
              republishToDlq: true
      kafka:
        binder:
          brokers: 127.0.0.1
          defaultBrokerPort: 9092
        bindings.messageProcessor-in-0:
            consumer:
              enableDlq: true

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

server:
  port: 7003
  error:
    include-message: always

logging:
  level:
    root: INFO
    hy: DEBUG
    org.hibernate:
      SQL: DEBUG
      type.descriptor.sql.BasicBinder: TRACE

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

---

spring:
  config:
    activate.on-profile: docker
  datasource:
    url: jdbc:mysql://mysql/review-db
  jpa:
    show-sql: false
  rabbitmq:
    host: rabbitmq
  cloud:
    stream.kafka.binder.brokers: kafka

server:
  port: 8080

---

spring:
  config:
    activate.on-profile: streaming_partitioned
  cloud:
    stream.bindings.messageProcessor-in-0.consumer:
      partitioned: true
      instanceCount: 2

---

spring:
  config:
    activate.on-profile: streaming_instance_0
  cloud:
    stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 0

---

spring:
  config:
    activate.on-profile: streaming_instance_1
  cloud:
    stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 1

---

spring:
  config:
    activate.on-profile: kafka
  cloud:
    stream:
      defaultBinder: kafka
      kafka.binder.replication-factor: 1
  kafka:
    bootstrap-servers: kafka:9092

management.health.rabbit.enabled: false
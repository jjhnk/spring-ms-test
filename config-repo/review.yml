spring:
  datasource:
    url: jdbc:mysql://localhost/${spring.application.name}-db
    username: user
    password: '{cipher}24b93c790fa2ed0dc5a6a2b8c39853cf4d6cd6100c248de5f279fb5dd78e7be6'
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari.initializationFailTimeout: 60000
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: true
  cloud:
    function:
      definition: messageProcessor
    stream:
      default.contentType: application/json
      bindings:
        messageProcessor-in-0:
          destination: ${spring.application.name}s
          group: ${spring.application.name}sGroup
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 500
            backOffMaxInterval: 1000
            backOffMultiplier: 2.0
      rabbit:
        bindings.messageProcessor-in-0:
          consumer:
            autoBindDlq: true
            republishToDlq: true
      kafka:
        bindings.messageProcessor-in-0:
          consumer:
            enableDlq: true

server:
  port: 7003
  error:
    include-message: always

logging:
  level:
    root: INFO
    hy: INFO
    org.hibernate:
      SQL: DEBUG
      type.descriptor.sql.BasicBinder: TRACE

---

spring:
  config:
    activate.on-profile: docker
  datasource:
    url: jdbc:mysql://mysql/${spring.application.name}-db
  jpa:
    show-sql: false

server:
  port: 80

---

spring:
  config:
    activate.on-profile: streaming_partitioned
  cloud:
    stream.bindings.messageProcessor-in-0.consumer:
      partitioned: true
      instanceCount: 2

---

spring:
  config:
    activate.on-profile: streaming_instance_0
  cloud:
    stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 0

---

spring:
  config:
    activate.on-profile: streaming_instance_1
  cloud:
    stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 1

---

spring:
  config:
    activate:
      on-profile:
      - prod
  datasource:
    url: jdbc:mysql://172.17.0.1:3306/${spring.application.name}-db

logging:
  level:
    root: WARN
    hy: WARN
    '[org.hibernate.SQL]': WARN
    '[org.hibernate.type.descriptor.sql.BasicBinder]': WARN
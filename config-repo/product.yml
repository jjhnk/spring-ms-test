spring:
  application:
    name: product
  data:
    mongodb:
      host: localhost
      port: 27017
      database: ${spring.application.name}-db
      auto-index-creation: true
  cloud:
    function:
      definition: messageProcessor
    stream:
      default.contentType: application/json
      bindings:
        messageProcessor-in-0:
          destination: ${spring.application.name}s
          group: ${spring.application.name}sGroup
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 500
            backOffMaxInterval: 1000
            backOffMultiplier: 2.0
      rabbit:
        bindings.messageProcessor-in-0:
          consumer:
            autoBindDlq: true
            republishToDlq: true
      kafka:
        bindings.messageProcessor-in-0:
          consumer:
            enableDlq: true

server:
  port: 7001
  error:
    include-message: always

logging:
  level:
    root: INFO
    hy: INFO
    org.springframework.data.mongodb.core.ReactiveMongoTemplate: DEBUG

---

spring:
  config:
    activate.on-profile: docker
  data:
    mongodb:
      host: mongodb

server:
  port: 80

---

spring:
  config:
    activate.on-profile: streaming_partitioned
  cloud:
    stream.bindings.messageProcessor-in-0.consumer:
      partitioned: true
      instanceCount: 2

---

spring:
  config:
    activate.on-profile: streaming_instance_0
  cloud:
    stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 0

---

spring:
  config:
    activate.on-profile: streaming_instance_1
  cloud:
    stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 1

---

spring:
  config:
    activate:
      on-profile:
      - prod
  data:
    mongodb:
      host: 172.17.0.1

logging:
  level:
    root: DEBUG
    hy: DEBUG
    '[org.springframework.data.mongodb.core.ReactiveMongoTemplate]': DEBUG
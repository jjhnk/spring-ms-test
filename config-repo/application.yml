spring:
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: '{cipher}17fcf0ae5b8c5cf87de6875b699be4a1746dd493a99d926c7a26a68c422117ef'
  cloud:
    stream:
      default-binder: rabbit
      kafka.binder:
        brokers: 127.0.0.1
        defaultBrokerPort: 9092

app:
  eureka:
    server: localhost
    username: u
    password: '{cipher}bf298f6d5f878b342f9e44bec08cb9ac00b4ce57e98316f030194a225fac89fb'
  auth:
    server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: "http://${app.eureka.username}:${app.eureka.password}@${app.eureka.server}:8761/eureka/"
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

management:
  endpoints:
    web.exposure.include: "*"
  endpoint:
    health.show-details: "ALWAYS"
  zipkin:
    tracing:
      endpoint: http://zipkin-server:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0


logging.pattern.level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

---

spring:
  config:
    activate.on-profile: docker
  cloud:
    stream:
      kafka.binder.brokers: kafka
  rabbitmq:
    host: rabbitmq

app:
  eureka:
    server: eureka
  auth:
    server: auth-server

---

spring:
  config:
    activate.on-profile: kafka
  cloud:
    stream.defaultBinder: kafka
    stream.kafka.binder.replication-factor: 1
  kafka:
    bootstrap-servers: kafka:9092

management.health.rabbit.enabled: false